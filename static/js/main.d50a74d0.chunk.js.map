{"version":3,"sources":["components/CountryCard.js","components/CountryList.js","App.js","reportWebVitals.js","index.js"],"names":["CountryCard","this","props","currentCountry","length","displayDateTime","Date","updated","toLocaleString","id","className","src","countryInfo","flag","alt","country","continent","population","toString","replace","active","activePerOneMillion","cases","casesPerOneMillion","critical","criticalPerOneMillion","deaths","deathsPerOneMillion","recovered","recoveredPerOneMillion","tests","testsPerOneMillion","todayCases","todayDeaths","todayRecovered","React","Component","CountryList","countriesData","map","elem","onClick","whenClicked","App","state","activeCountry","setActiveCountry","bind","axios","get","then","response","setState","data","getRandomCountry","catch","error","console","log","generateRandomInt","Math","floor","random","window","scrollTo","top","left","behavior","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d50a74d0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass CountryCard extends React.Component {\r\n    render() {\r\n        if ( this.props.currentCountry == null || this.props.currentCountry.length === 0) {\r\n        return <div>Loading...</div>;\r\n        } else {\r\n        let dateTime = new Date(this.props.currentCountry.updated);\r\n        let displayDateTime = dateTime.toLocaleString(\"en-GB\");\r\n        return (\r\n            <div id=\"country-card\">\r\n            <div className=\"top-wrap\">\r\n                <div className=\"country-flag\">\r\n                <img\r\n                    src={this.props.currentCountry.countryInfo.flag}\r\n                    alt={this.props.currentCountry.country}\r\n                />\r\n                </div>\r\n                <div className=\"top-details-wrap\">\r\n                <div className=\"country\">\r\n                    {this.props.currentCountry.country}{\" \"}\r\n                </div>\r\n                <div className=\"continent\">\r\n                    <span className=\"main-title\">Continent</span>\r\n                    {this.props.currentCountry.continent}{\" \"}\r\n                </div>\r\n                <div className=\"population\">\r\n                    <span className=\"main-title\">population</span>\r\n                    {this.props.currentCountry.population\r\n                    .toString()\r\n                    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}\r\n                </div>\r\n                <div className=\"last-updated\">\r\n                    <span className=\"main-title\">updated at</span>\r\n                    {displayDateTime}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"bottom-wrap\">\r\n                <div className=\"info-box active\">\r\n                <div className=\"info-box-title\">Total Active</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.active}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box active per_million\">\r\n                <div className=\"info-box-title\">Active per million</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.activePerOneMillion}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box cases\">\r\n                <div className=\"info-box-title\">Total Cases</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.cases}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box cases per_million\">\r\n                <div className=\"info-box-title\">Cases per million</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.casesPerOneMillion}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box critical\">\r\n                <div className=\"info-box-title\">Critical Condition</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.critical}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box critical per_million\">\r\n                <div className=\"info-box-title\">Critical per million</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.criticalPerOneMillion}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box deaths\">\r\n                <div className=\"info-box-title\">Total Deaths</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.deaths}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box deaths per_million\">\r\n                <div className=\"info-box-title\">Deaths per million</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.deathsPerOneMillion}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box recovered\">\r\n                <div className=\"info-box-title\">Total Recovered</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.recovered}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box recovered per_million\">\r\n                <div className=\"info-box-title\">Recovered per million</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.recoveredPerOneMillion}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box tests\">\r\n                <div className=\"info-box-title\">Total Tests</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.tests}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box tests per_million\">\r\n                <div className=\"info-box-title\">Tests per million</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.testsPerOneMillion}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box cases_today\">\r\n                <div className=\"info-box-title\">Cases today</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.todayCases}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box deaths_today\">\r\n                <div className=\"info-box-title\">Deaths today</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.todayDeaths}\r\n                </div>\r\n                </div>\r\n                <div className=\"info-box recovered_today\">\r\n                <div className=\"info-box-title\">Recovered today</div>\r\n                <div className=\"info-box-stat\">\r\n                    {this.props.currentCountry.todayRecovered}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n}\r\n\r\nexport default CountryCard;","import React from 'react';\r\n\r\nclass CountryList extends React.Component {\r\n    render() {\r\n        if ( this.props.countriesData == null || this.props.countriesData.length === 0) {\r\n        return <div>Loading...</div>;\r\n        } else {\r\n        return (\r\n            <table id=\"countries_table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>Country</th>\r\n                    <th>Total Cases</th>\r\n                    <th>Cases Today</th>\r\n                    <th>Deaths</th>\r\n                    <th>Deaths Today</th>\r\n                    <th>Recovered</th>\r\n                    <th>Recovered Today</th>\r\n                    <th>Active</th>\r\n                    <th>Critical</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.countriesData.map((elem) => (\r\n                    <tr key={elem.country} className=\"country_row\">\r\n                        <th\r\n                        className=\"country-display\"\r\n                        onClick={() => this.props.whenClicked(elem)}>\r\n                        <img\r\n                            src={elem.countryInfo.flag}\r\n                            alt={elem.country}\r\n                            className=\"country-img\"></img>\r\n                        {elem.country}\r\n                        </th>\r\n                        <th>{elem.cases}</th>\r\n                        <th>{elem.todayCases}</th>\r\n                        <th>{elem.deaths}</th>\r\n                        <th>{elem.todayDeaths}</th>\r\n                        <th>{elem.recovered}</th>\r\n                        <th>{elem.todayRecovered}</th>\r\n                        <th>{elem.active}</th>\r\n                        <th>{elem.critical}</th>\r\n                    </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        );\r\n        }\r\n    }\r\n}\r\n\r\nexport default CountryList;","import React from 'react';\nimport axios from 'axios';\nimport CountryCard from './components/CountryCard';\nimport CountryList from './components/CountryList';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countriesData: [],\n      activeCountry: [],\n    };\n    this.setActiveCountry = this.setActiveCountry.bind(this);\n  }\n  componentDidMount() {\n    axios\n      .get(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => {\n        this.setState({ countriesData: response.data });\n        this.getRandomCountry();\n      })\n      .catch((error) => console.log(error));\n  }\n\n  getRandomCountry() {\n    let generateRandomInt = Math.floor(\n      Math.random() * this.state.countriesData.length\n    );\n    let getRandomCountry = this.state.countriesData[generateRandomInt];\n    this.setState({ activeCountry: getRandomCountry });\n  }\n\n  setActiveCountry(country) {\n    this.setState({ activeCountry: country });\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  render() {\n    return (\n      <div className=\"covid-tracker\">\n        <h1 className=\"section-title\">Country Card</h1>\n        <p className=\"section-instructions\">\n          Random country has been displayed as an example, view instructions\n          below to display specific country of your choice.\n        </p>\n        <CountryCard currentCountry={this.state.activeCountry} />\n\n        <h1 className=\"section-title\">Country List</h1>\n        <p className=\"section-instructions\">\n          Click on the specific country name to view all the details about the\n          country.\n        </p>\n        <CountryList\n          countriesData={this.state.countriesData}\n          whenClicked={this.setActiveCountry}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}