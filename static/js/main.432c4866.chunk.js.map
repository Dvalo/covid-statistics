{"version":3,"sources":["components/CountryCard.js","components/CountryList.js","App.js","index.js"],"names":["CountryCard","number","toLocaleString","maximumFractionDigits","date","Date","this","props","currentCountry","length","type","color","height","width","id","className","src","countryInfo","flag","alt","country","continent","formatNumber","population","formatDate","updated","active","activePerOneMillion","cases","casesPerOneMillion","critical","criticalPerOneMillion","deaths","deathsPerOneMillion","recovered","recoveredPerOneMillion","tests","testsPerOneMillion","todayCases","todayDeaths","todayRecovered","React","Component","CountryList","countriesData","map","onClick","whenClicked","App","state","activeCountry","setActiveCountry","bind","axios","get","then","response","setState","data","getRandomCountry","catch","error","console","log","generateRandomInt","Math","floor","random","window","scrollTo","top","left","behavior","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAkJeA,E,2KA9IAC,GACX,OAAOA,EAAOC,eAAe,QAAS,CAAEC,sBAAuB,M,iCAGtDC,GACT,OAAO,IAAIC,KAAKD,GAAMF,eAAe,W,+BAIrC,GAC+B,MAA7BI,KAAKC,MAAMC,gBAC0B,IAArCF,KAAKC,MAAMC,eAAeC,OAE1B,OACE,cAAC,IAAD,CAAcC,KAAK,UAAUC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAE5D,IACEL,EAAmBF,KAAKC,MAAxBC,eAER,OACE,sBAAKM,GAAG,eAAR,UACE,sBAAKC,UAAU,WAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBACEC,IAAKR,EAAeS,YAAYC,KAChCC,IAAKX,EAAeY,YAGxB,sBAAKL,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SAA0BP,EAAeY,UACzC,sBAAKL,UAAU,YAAf,UACE,sBAAMA,UAAU,aAAhB,uBACCP,EAAea,aAElB,sBAAKN,UAAU,aAAf,UACE,sBAAMA,UAAU,aAAhB,wBACCT,KAAKgB,aAAad,EAAee,eAEpC,sBAAKR,UAAU,eAAf,UACE,sBAAMA,UAAU,aAAhB,wBACCT,KAAKkB,WAAWhB,EAAeiB,kBAItC,sBAAKV,UAAU,cAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,iBAAf,0BACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKgB,aAAad,EAAekB,aAGtC,sBAAKX,UAAU,8BAAf,UACE,qBAAKA,UAAU,iBAAf,gCACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKC,MAAMC,eAAemB,yBAG/B,sBAAKZ,UAAU,iBAAf,UACE,qBAAKA,UAAU,iBAAf,yBACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKgB,aAAad,EAAeoB,YAGtC,sBAAKb,UAAU,6BAAf,UACE,qBAAKA,UAAU,iBAAf,+BACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKgB,aAAad,EAAeqB,yBAGtC,sBAAKd,UAAU,oBAAf,UACE,qBAAKA,UAAU,iBAAf,gCACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKgB,aAAad,EAAesB,eAGtC,sBAAKf,UAAU,gCAAf,UACE,qBAAKA,UAAU,iBAAf,kCACA,qBAAKA,UAAU,gBAAf,SACGP,EAAeuB,2BAGpB,sBAAKhB,UAAU,kBAAf,UACE,qBAAKA,UAAU,iBAAf,0BACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKgB,aAAad,EAAewB,aAGtC,sBAAKjB,UAAU,8BAAf,UACE,qBAAKA,UAAU,iBAAf,gCACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKC,MAAMC,eAAeyB,yBAG/B,sBAAKlB,UAAU,qBAAf,UACE,qBAAKA,UAAU,iBAAf,6BACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKgB,aAAad,EAAe0B,gBAGtC,sBAAKnB,UAAU,iCAAf,UACE,qBAAKA,UAAU,iBAAf,mCACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKC,MAAMC,eAAe2B,4BAG/B,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,iBAAf,yBACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKgB,aAAad,EAAe4B,YAGtC,sBAAKrB,UAAU,6BAAf,UACE,qBAAKA,UAAU,iBAAf,+BACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKC,MAAMC,eAAe6B,wBAG/B,sBAAKtB,UAAU,uBAAf,UACE,qBAAKA,UAAU,iBAAf,yBACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKgB,aAAad,EAAe8B,iBAGtC,sBAAKvB,UAAU,wBAAf,UACE,qBAAKA,UAAU,iBAAf,0BACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKgB,aAAad,EAAe+B,kBAGtC,sBAAKxB,UAAU,2BAAf,UACE,qBAAKA,UAAU,iBAAf,6BACA,qBAAKA,UAAU,gBAAf,SACGT,KAAKgB,aAAad,EAAegC,+B,GArIxBC,IAAMC,WCsDjBC,E,uKArDH,IAAD,OACP,OAC8B,MAA5BrC,KAAKC,MAAMqC,eACyB,IAApCtC,KAAKC,MAAMqC,cAAcnC,OAGvB,cAAC,IAAD,CAAcC,KAAK,UAAUC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAIhE,wBAAOC,GAAG,kBAAV,UACE,gCACE,+BACE,yCACA,6CACA,6CACA,wCACA,8CACA,2CACA,wCACA,+CAGJ,gCACGR,KAAKC,MAAMqC,cAAcC,KAAI,SAACzB,GAAD,OAC5B,qBAA0BL,UAAU,cAApC,UACE,qBACEA,UAAU,kBACV+B,QAAS,kBAAM,EAAKvC,MAAMwC,YAAY3B,IAFxC,UAIE,qBACEJ,IAAKI,EAAQH,YAAYC,KACzBC,IAAKC,EAAQA,QACbL,UAAU,gBAEXK,EAAQA,WAEX,6BAAKA,EAAQQ,QACb,6BAAKR,EAAQkB,aACb,6BAAKlB,EAAQY,SACb,6BAAKZ,EAAQmB,cACb,6BAAKnB,EAAQc,YACb,6BAAKd,EAAQM,SACb,6BAAKN,EAAQU,aAlBNV,EAAQA,qB,GA1BLqB,IAAMC,WCgEjBM,G,wDA3Db,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IACD0C,MAAQ,CACXL,cAAe,GACfM,cAAe,IAEjB,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBANP,E,gEAQE,IAAD,OAClBC,IACGC,IAAI,4CACJC,MAAK,SAACC,GACL,EAAKC,SAAS,CAAEb,cAAeY,EAASE,OACxC,EAAKC,sBAENC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,yCAIhC,IAAIG,EAAoBC,KAAKC,MAC3BD,KAAKE,SAAW7D,KAAK2C,MAAML,cAAcnC,QAEvCkD,EAAmBrD,KAAK2C,MAAML,cAAcoB,GAChD1D,KAAKmD,SAAS,CAAEP,cAAeS,M,uCAGhBvC,GACfd,KAAKmD,SAAS,CAAEP,cAAe9B,IAC/BgD,OAAOC,SAAS,CAAEC,IAAK,EAAGC,KAAM,EAAGC,SAAU,a,+BAI7C,OACE,sBAAKzD,UAAU,gBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,gBAAd,0BACA,mBAAGA,UAAU,uBAAb,kIAIA,cAAC,EAAD,CAAaP,eAAgBF,KAAK2C,MAAMC,mBAG1C,sBAAKnC,UAAU,uBAAf,UACE,oBAAIA,UAAU,gBAAd,0BACA,mBAAGA,UAAU,uBAAb,2FAIA,cAAC,EAAD,CACE6B,cAAetC,KAAK2C,MAAML,cAC1BG,YAAazC,KAAK6C,6B,GApDZV,IAAMC,Y,MCDxB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.432c4866.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nclass CountryCard extends React.Component {\r\n  formatNumber(number) {\r\n    return number.toLocaleString(\"en-US\", { maximumFractionDigits: 2 });\r\n  }\r\n\r\n  formatDate(date) {\r\n    return new Date(date).toLocaleString(\"en-GB\");\r\n  }\r\n\r\n  render() {\r\n    if (\r\n      this.props.currentCountry == null ||\r\n      this.props.currentCountry.length === 0\r\n    ) {\r\n      return (\r\n        <ReactLoading type=\"bubbles\" color=\"#ffffff\" height={64} width={64} />\r\n      );\r\n    } else {\r\n      const { currentCountry } = this.props;\r\n\r\n      return (\r\n        <div id=\"country-card\">\r\n          <div className=\"top-wrap\">\r\n            <div className=\"country-flag\">\r\n              <img\r\n                src={currentCountry.countryInfo.flag}\r\n                alt={currentCountry.country}\r\n              />\r\n            </div>\r\n            <div className=\"top-details-wrap\">\r\n              <div className=\"country\">{currentCountry.country}</div>\r\n              <div className=\"continent\">\r\n                <span className=\"main-title\">Continent</span>\r\n                {currentCountry.continent}\r\n              </div>\r\n              <div className=\"population\">\r\n                <span className=\"main-title\">Population</span>\r\n                {this.formatNumber(currentCountry.population)}\r\n              </div>\r\n              <div className=\"last-updated\">\r\n                <span className=\"main-title\">Updated at</span>\r\n                {this.formatDate(currentCountry.updated)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom-wrap\">\r\n            <div className=\"info-box active\">\r\n              <div className=\"info-box-title\">Total Active</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.formatNumber(currentCountry.active)}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box active per_million\">\r\n              <div className=\"info-box-title\">Active per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.activePerOneMillion}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box cases\">\r\n              <div className=\"info-box-title\">Total Cases</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.formatNumber(currentCountry.cases)}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box cases per_million\">\r\n              <div className=\"info-box-title\">Cases per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.formatNumber(currentCountry.casesPerOneMillion)}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box critical\">\r\n              <div className=\"info-box-title\">Critical Condition</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.formatNumber(currentCountry.critical)}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box critical per_million\">\r\n              <div className=\"info-box-title\">Critical per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {currentCountry.criticalPerOneMillion}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box deaths\">\r\n              <div className=\"info-box-title\">Total Deaths</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.formatNumber(currentCountry.deaths)}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box deaths per_million\">\r\n              <div className=\"info-box-title\">Deaths per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.deathsPerOneMillion}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box recovered\">\r\n              <div className=\"info-box-title\">Total Recovered</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.formatNumber(currentCountry.recovered)}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box recovered per_million\">\r\n              <div className=\"info-box-title\">Recovered per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.recoveredPerOneMillion}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box tests\">\r\n              <div className=\"info-box-title\">Total Tests</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.formatNumber(currentCountry.tests)}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box tests per_million\">\r\n              <div className=\"info-box-title\">Tests per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.testsPerOneMillion}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box cases_today\">\r\n              <div className=\"info-box-title\">Cases today</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.formatNumber(currentCountry.todayCases)}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box deaths_today\">\r\n              <div className=\"info-box-title\">Deaths today</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.formatNumber(currentCountry.todayDeaths)}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box recovered_today\">\r\n              <div className=\"info-box-title\">Recovered today</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.formatNumber(currentCountry.todayRecovered)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CountryCard;\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nclass CountryList extends React.Component {\r\n  render() {\r\n    if (\r\n      this.props.countriesData == null ||\r\n      this.props.countriesData.length === 0\r\n    ) {\r\n      return (\r\n        <ReactLoading type=\"bubbles\" color=\"#ffffff\" height={64} width={64} />\r\n      );\r\n    } else {\r\n      return (\r\n        <table id=\"countries_table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Country</th>\r\n              <th>Total Cases</th>\r\n              <th>Cases Today</th>\r\n              <th>Deaths</th>\r\n              <th>Deaths Today</th>\r\n              <th>Recovered</th>\r\n              <th>Active</th>\r\n              <th>Critical</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.countriesData.map((country) => (\r\n              <tr key={country.country} className=\"country_row\">\r\n                <th\r\n                  className=\"country-display\"\r\n                  onClick={() => this.props.whenClicked(country)}\r\n                >\r\n                  <img\r\n                    src={country.countryInfo.flag}\r\n                    alt={country.country}\r\n                    className=\"country-img\"\r\n                  ></img>\r\n                  {country.country}\r\n                </th>\r\n                <th>{country.cases}</th>\r\n                <th>{country.todayCases}</th>\r\n                <th>{country.deaths}</th>\r\n                <th>{country.todayDeaths}</th>\r\n                <th>{country.recovered}</th>\r\n                <th>{country.active}</th>\r\n                <th>{country.critical}</th>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CountryList;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport CountryCard from \"./components/CountryCard\";\nimport CountryList from \"./components/CountryList\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countriesData: [],\n      activeCountry: [],\n    };\n    this.setActiveCountry = this.setActiveCountry.bind(this);\n  }\n  componentDidMount() {\n    axios\n      .get(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => {\n        this.setState({ countriesData: response.data });\n        this.getRandomCountry();\n      })\n      .catch((error) => console.log(error));\n  }\n\n  getRandomCountry() {\n    let generateRandomInt = Math.floor(\n      Math.random() * this.state.countriesData.length\n    );\n    let getRandomCountry = this.state.countriesData[generateRandomInt];\n    this.setState({ activeCountry: getRandomCountry });\n  }\n\n  setActiveCountry(country) {\n    this.setState({ activeCountry: country });\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  render() {\n    return (\n      <div className=\"covid-tracker\">\n        <div className=\"country-card-wrapper\">\n          <h1 className=\"section-title\">Country Card</h1>\n          <p className=\"section-instructions\">\n            Random country has been displayed as an example, view instructions\n            below to display specific country of your choice.\n          </p>\n          <CountryCard currentCountry={this.state.activeCountry} />\n        </div>\n\n        <div className=\"country-list-wrapper\">\n          <h1 className=\"section-title\">Country List</h1>\n          <p className=\"section-instructions\">\n            Click on the specific country name to view all the details about the\n            country.\n          </p>\n          <CountryList\n            countriesData={this.state.countriesData}\n            whenClicked={this.setActiveCountry}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}