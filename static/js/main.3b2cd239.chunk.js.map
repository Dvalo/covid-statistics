{"version":3,"sources":["components/CountryCard.js","components/CountryList.js","App.js","index.js"],"names":["CountryCard","this","props","currentCountry","length","type","color","height","width","displayDateTime","Date","updated","toLocaleString","id","className","src","countryInfo","flag","alt","country","continent","population","toString","replace","active","activePerOneMillion","cases","casesPerOneMillion","critical","criticalPerOneMillion","deaths","deathsPerOneMillion","recovered","recoveredPerOneMillion","tests","testsPerOneMillion","todayCases","todayDeaths","todayRecovered","React","Component","CountryList","countriesData","map","elem","onClick","whenClicked","App","state","activeCountry","setActiveCountry","bind","axios","get","then","response","setState","data","getRandomCountry","catch","error","console","log","generateRandomInt","Math","floor","random","window","scrollTo","top","left","behavior","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b2cd239.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nclass CountryCard extends React.Component {\r\n  render() {\r\n    if (\r\n      this.props.currentCountry == null ||\r\n      this.props.currentCountry.length === 0\r\n    ) {\r\n      return (\r\n        <ReactLoading\r\n          type=\"bubbles\"\r\n          color=\"#ffffff\"\r\n          height={64}\r\n          width={64}\r\n        />\r\n      );\r\n    } else {\r\n      let dateTime = new Date(this.props.currentCountry.updated);\r\n      let displayDateTime = dateTime.toLocaleString(\"en-GB\");\r\n      return (\r\n        <div id=\"country-card\">\r\n          <div className=\"top-wrap\">\r\n            <div className=\"country-flag\">\r\n              <img\r\n                src={this.props.currentCountry.countryInfo.flag}\r\n                alt={this.props.currentCountry.country}\r\n              />\r\n            </div>\r\n            <div className=\"top-details-wrap\">\r\n              <div className=\"country\">\r\n                {this.props.currentCountry.country}{\" \"}\r\n              </div>\r\n              <div className=\"continent\">\r\n                <span className=\"main-title\">Continent</span>\r\n                {this.props.currentCountry.continent}{\" \"}\r\n              </div>\r\n              <div className=\"population\">\r\n                <span className=\"main-title\">population</span>\r\n                {this.props.currentCountry.population\r\n                  .toString()\r\n                  .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}\r\n              </div>\r\n              <div className=\"last-updated\">\r\n                <span className=\"main-title\">updated at</span>\r\n                {displayDateTime}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom-wrap\">\r\n            <div className=\"info-box active\">\r\n              <div className=\"info-box-title\">Total Active</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.active}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box active per_million\">\r\n              <div className=\"info-box-title\">Active per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.activePerOneMillion}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box cases\">\r\n              <div className=\"info-box-title\">Total Cases</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.cases}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box cases per_million\">\r\n              <div className=\"info-box-title\">Cases per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.casesPerOneMillion}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box critical\">\r\n              <div className=\"info-box-title\">Critical Condition</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.critical}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box critical per_million\">\r\n              <div className=\"info-box-title\">Critical per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.criticalPerOneMillion}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box deaths\">\r\n              <div className=\"info-box-title\">Total Deaths</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.deaths}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box deaths per_million\">\r\n              <div className=\"info-box-title\">Deaths per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.deathsPerOneMillion}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box recovered\">\r\n              <div className=\"info-box-title\">Total Recovered</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.recovered}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box recovered per_million\">\r\n              <div className=\"info-box-title\">Recovered per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.recoveredPerOneMillion}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box tests\">\r\n              <div className=\"info-box-title\">Total Tests</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.tests}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box tests per_million\">\r\n              <div className=\"info-box-title\">Tests per million</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.testsPerOneMillion}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box cases_today\">\r\n              <div className=\"info-box-title\">Cases today</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.todayCases}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box deaths_today\">\r\n              <div className=\"info-box-title\">Deaths today</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.todayDeaths}\r\n              </div>\r\n            </div>\r\n            <div className=\"info-box recovered_today\">\r\n              <div className=\"info-box-title\">Recovered today</div>\r\n              <div className=\"info-box-stat\">\r\n                {this.props.currentCountry.todayRecovered}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CountryCard;\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nclass CountryList extends React.Component {\r\n  render() {\r\n    if (\r\n      this.props.countriesData == null ||\r\n      this.props.countriesData.length === 0\r\n    ) {\r\n      return (\r\n        <ReactLoading\r\n          type=\"bubbles\"\r\n          color=\"#ffffff\"\r\n          height={64}\r\n          width={64}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <table id=\"countries_table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Country</th>\r\n              <th>Total Cases</th>\r\n              <th>Cases Today</th>\r\n              <th>Deaths</th>\r\n              <th>Deaths Today</th>\r\n              <th>Recovered</th>\r\n              <th>Recovered Today</th>\r\n              <th>Active</th>\r\n              <th>Critical</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.countriesData.map((elem) => (\r\n              <tr key={elem.country} className=\"country_row\">\r\n                <th\r\n                  className=\"country-display\"\r\n                  onClick={() => this.props.whenClicked(elem)}\r\n                >\r\n                  <img\r\n                    src={elem.countryInfo.flag}\r\n                    alt={elem.country}\r\n                    className=\"country-img\"\r\n                  ></img>\r\n                  {elem.country}\r\n                </th>\r\n                <th>{elem.cases}</th>\r\n                <th>{elem.todayCases}</th>\r\n                <th>{elem.deaths}</th>\r\n                <th>{elem.todayDeaths}</th>\r\n                <th>{elem.recovered}</th>\r\n                <th>{elem.todayRecovered}</th>\r\n                <th>{elem.active}</th>\r\n                <th>{elem.critical}</th>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CountryList;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport CountryCard from \"./components/CountryCard\";\nimport CountryList from \"./components/CountryList\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countriesData: [],\n      activeCountry: [],\n    };\n    this.setActiveCountry = this.setActiveCountry.bind(this);\n  }\n  componentDidMount() {\n    axios\n      .get(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => {\n        this.setState({ countriesData: response.data });\n        this.getRandomCountry();\n      })\n      .catch((error) => console.log(error));\n  }\n\n  getRandomCountry() {\n    let generateRandomInt = Math.floor(\n      Math.random() * this.state.countriesData.length\n    );\n    let getRandomCountry = this.state.countriesData[generateRandomInt];\n    this.setState({ activeCountry: getRandomCountry });\n  }\n\n  setActiveCountry(country) {\n    this.setState({ activeCountry: country });\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  render() {\n    return (\n      <div className=\"covid-tracker\">\n        <div className=\"country-card-wrapper\">\n          <h1 className=\"section-title\">Country Card</h1>\n          <p className=\"section-instructions\">\n            Random country has been displayed as an example, view instructions\n            below to display specific country of your choice.\n          </p>\n          <CountryCard currentCountry={this.state.activeCountry} />\n        </div>\n\n        <div className=\"country-list-wrapper\">\n          <h1 className=\"section-title\">Country List</h1>\n          <p className=\"section-instructions\">\n            Click on the specific country name to view all the details about the\n            country.\n          </p>\n          <CountryList\n            countriesData={this.state.countriesData}\n            whenClicked={this.setActiveCountry}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}